	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>demo-certs</artifactId>
				<version>${project.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
				<classifier>tests</classifier>
				<scope>test</scope>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>element-connector</module>
		<module>scandium-core</module>
		<module>californium-core</module>
		<module>californium-proxy</module>
		<module>californium-osgi</module>
		<module>demo-apps</module>
		<module>demo-certs</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${project.build.javaVersion}</source>
						<target>${project.build.javaVersion}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.5</version>
					<inherited>true</inherited>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<mainClass>${assembly.mainClass}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<!-- Make sure that only non-snapshot versions are used for the dependencies. 
							Only active when property 'snapshotDependencyAllowed' is false. -->
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>${snapshotDependencyAllowed}</skip>
							<rules>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
								<requireReleaseVersion>
									<message>No Snapshots Allowed!</message>
								</requireReleaseVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- 
					Use the Nexus Staging plugin as a full replacement for the standard
					Maven Deploy plugin.
					See https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
					why this makes sense :-)
					We can control whether we want to deploy to the Eclipse repo or Maven Central
					by a combination of the version being a SNAPHOT or release version and property
					skipStaging=true/false.
					In any case we can take advantage of the plugin's "deferred deploy" feature which
					makes sure that all artifacts of a multi-module project are deployed as a whole
					at the end of the build process instead of deploying each module's artifacts
					individually as part of building the module.
				 -->
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.5</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!--
				this profile generates javadoc to check integrity
				sub-modules can set property maven.javadoc.skip=true in order to skip this
				(e.g., the executable examples, which do not require Javadoc)
			-->
			<id>javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile signs artifacts so that they can be deployed to repo.eclipse.org -->
			<id>eclipse_jar_signing</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>enableEclipseJarSigner</name>
				</property>
			</activation>
			<pluginRepositories>
				<pluginRepository>
					<id>eclipse-repo</id>
					<name>Eclipse Repository</name>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
					<url>https://repo.eclipse.org/content/repositories/releases/</url>
				</pluginRepository>
			</pluginRepositories>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.cbi.maven.plugins</groupId>
						<artifactId>eclipse-jarsigner-plugin</artifactId>
						<version>1.1.2</version>
						<executions>
							<execution>
								<id>sign-jars</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile generates GPG signatures -->
			<id>create_gpg_signature</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createGPGSignature</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
